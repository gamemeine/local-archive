name: Build and Deploy

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest
    outputs:
      web_image: ${{ steps.build_web.outputs.web_image }}
      api_image: ${{ steps.build_api.outputs.api_image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: '${{ vars.GCP_PROJECT }}'
          install_components: 'beta'

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build and Push Web Docker Image
        id: build_web
        run: |
          WEB_IMAGE_TAG="${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT }}/default/webapp:${{ github.sha }}"
          docker build -t $WEB_IMAGE_TAG ./src/web
          docker push $WEB_IMAGE_TAG
          echo "web_image=$WEB_IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Build and Push API Docker Image
        id: build_api
        run: |
          API_IMAGE_TAG="${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT }}/default/api:${{ github.sha }}"
          docker build -t $API_IMAGE_TAG ./src/api
          docker push $API_IMAGE_TAG
          echo "api_image=$API_IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy_web:
    name: Deploy Web to Cloud Run
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: '${{ vars.GCP_PROJECT }}'
          install_components: 'beta'

      - name: Deploy Web to Cloud Run
        run: |
          gcloud run deploy webapp \
            --image="${{ needs.build.outputs.web_image }}" \
            --region=${{ vars.GCP_REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --quiet

  deploy_api:
    name: Deploy API to Cloud Run
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: '${{ vars.GCP_PROJECT }}'
          install_components: 'beta'

      - name: Deploy API to Cloud Run
        run: |
          gcloud run deploy api \
            --image="${{ needs.build.outputs.api_image }}" \
            --region=${{ vars.GCP_REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --quiet

  release:
    name: Create GitHub Release
    needs: [deploy_web, deploy_api]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Release Tag
        id: set_tag
        run: |
          SHORT_SHA=${GITHUB_SHA:0:7}
          RELEASE_TAG="$(date +'%Y%m%d')-${SHORT_SHA}"
          echo "release_tag=${RELEASE_TAG}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_tag.outputs.release_tag }}
          release_name: Release ${{ steps.set_tag.outputs.release_tag }}
          body: |
            Deployed webapp and API images for commit ${{ github.sha }}.

            **Service Links:**
            - Webapp: [here](${{ vars.WEBAPP_URL }})
          draft: false
          prerelease: false